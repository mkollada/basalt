{
  "artifacts": [],
  "command": "main",
  "experiment": {
    "base_dir": "/Users/mattkollada/PycharmProjects/basalt/basalt_baselines",
    "dependencies": [
      "basalt-utils==0.0.1",
      "imitation==0.2.0",
      "minerl==0.4.2",
      "namesgenerator==0.3",
      "numpy==1.21.2",
      "sacred==0.8.2",
      "stable-baselines3==1.2.0",
      "torch==1.9.0"
    ],
    "mainfile": "bc.py",
    "name": "basalt_bc_baseline",
    "repositories": [
      {
        "commit": "18d38f20008d3e4f746868859c3457d53edbb312",
        "dirty": true,
        "url": "http://gitlab.aicrowd.com/cody_wild8/basalt_baselines_template.git"
      }
    ],
    "sources": [
      [
        "bc.py",
        "_sources/bc_d361f6bb47cae7ee4397bdc9f675f953.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/Users/mattkollada/PycharmProjects/basalt/basalt_baselines/bc.py\", line 107, in main\n    test_bc()\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/Users/mattkollada/PycharmProjects/basalt/basalt_baselines/bc.py\", line 125, in test_bc\n    trajectories = il_rollout.generate_trajectories(policy, vec_env, il_rollout.make_min_episodes(test_n_rollouts))\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/imitation/data/rollout.py\", line 328, in generate_trajectories\n    obs = venv.reset()\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/stable_baselines3/common/vec_env/dummy_vec_env.py\", line 61, in reset\n    obs = self.envs[env_idx].reset()\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/gym/core.py\", line 278, in reset\n    observation = self.env.reset(**kwargs)\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/gym/core.py\", line 305, in reset\n    return self.env.reset(**kwargs)\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/gym/core.py\", line 305, in reset\n    return self.env.reset(**kwargs)\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/gym/core.py\", line 305, in reset\n    return self.env.reset(**kwargs)\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/basalt_utils/wrappers/save_obs_and_actions.py\", line 26, in reset\n    obs = self.env.reset()\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/minerl/herobraine/wrappers/video_recording_wrapper.py\", line 75, in reset\n    self.video_writer.write_rgb_image(obs['pov'])\n",
    "  File \"/opt/anaconda3/envs/basalt/lib/python3.7/site-packages/minerl/herobraine/wrappers/video_recording_wrapper.py\", line 35, in write_rgb_image\n    print( self.out.path )\n",
    "AttributeError: 'cv2.VideoWriter' object has no attribute 'path'\n"
  ],
  "heartbeat": "2021-09-20T20:20:27.494011",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-6360U CPU @ 2.00GHz",
    "hostname": "Matts-MBP.lan",
    "os": [
      "Darwin",
      "Darwin-18.7.0-x86_64-i386-64bit"
    ],
    "python_version": "3.7.10"
  },
  "meta": {
    "command": "main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2021-09-20T20:18:54.668071",
  "status": "FAILED",
  "stop_time": "2021-09-20T20:20:27.495844"
}